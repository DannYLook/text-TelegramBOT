import telebot
import configure
from telebot import types

client = telebot.TeleBot(configure.config['token'])


@client.message_handler(commands=['application'])
def application(message):
    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–î–∞'), types.KeyboardButton('–ù–µ—Ç'))

    msg = client.send_message(message.chat.id,'–ñ–µ–ª–∞–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞?', reply_markup = rmk)
    client.register_next_step_handler(msg, user_answer)


def user_answer(message):
    if message.text == '–î–∞':
        msg = client.send_message(message.chat.id, '–í–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω—ã–µ')
        client.register_next_step_handler(msg, user_reg)
    elif message.text == '–ù–µ—Ç':
        client.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ! —Å–º–µ—à–Ω—è–≤–∫–∞!')
    else:
        client.send_message(message.chat.id, '–¢—ã, —á—Ç–æ —Å–º–µ—à–Ω—è–≤–∫–∞?')


def user_reg(message):
    client.send_message(message.chat.id, f'Your data: {message.text}')




@client.message_handler(commands = ['get_info', 'info'])
def get_user_info(message):
    markup_inline = types.InlineKeyboardMarkup()
    item_yes = types.InlineKeyboardButton(text = '–î–∞', callback_data = 'yes')
    item_no = types.InlineKeyboardButton(text = '–ù–µ—Ç', callback_data = 'No')

    markup_inline.add(item_yes, item_no)
    client.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ —É–∑–Ω–∞—Ç—å –Ω–µ–±–æ–ª—å—à—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—Å', reply_markup = markup_inline)

    @client.message_handler(content_types=['text'])
    def get_text(message):
        print(message)
        if message.text == '–ú–æ–π ID':
            client.send_message(message.chat.id, f'Your ID: {message.from_user.id}')
        elif message.text == '–ú–æ–π –Ω–∏–∫':
            client.send_message(message.chat.id, f'Your ID: {message.from_user.first_name}')


    @client.callback_query_handler(func = lambda call: True)
    def anwswer(call):
        if call.data == 'yes':
            markup_reply = types.ReplyKeyboardMarkup(resize_keyboard = True)
            item_id = types.KeyboardButton('–ú–æ–π ID')
            item_username = types.KeyboardButton( '–ú–æ–π –Ω–∏–∫' )

            markup_reply.add(item_id, item_username)
            client.send_message(call.message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫',reply_markup = markup_reply )

        elif call.data == 'no':
           pass


@client.message_handler(content_types = ['text'])
def get_text(message):
    name = message.from_user.first_name

    # print(message.text)

    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        client.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! ' + name)

    if message.text.lower() == '—á—Ç–æ —Ç—ã —É–º–µe—à—å?':
        client.send_message(message.chat.id, '–ú–Ω–æ–≥–æ —á–µ–≥–æ!üòù')

    if message.text == '–ú–æ–π ID':
        client.send_message(message.chat.id, f'Your ID: {message.from_user.id}')
    if message.text == '–ú–æ–π –Ω–∏–∫':
        client.send_message(message.chat.id, f'Your ID: {message.from_user.first_name}')


client.polling(none_stop = True, interval = 0)